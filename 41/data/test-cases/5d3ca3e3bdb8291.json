{"uid":"5d3ca3e3bdb8291","name":"test_change_name[MyName1sNintondo2024--group1]","fullName":"tests.mane_site_tests.test_nintondo_change_name#test_change_name","historyId":"22edcad4f63194b8028e732be25bd2bd","time":{"start":1732114313805,"stop":1732114327225,"duration":13420},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='go4109123758']\"}\n  (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x557af0efd31a <unknown>\n#1 0x557af0a136e0 <unknown>\n#2 0x557af0a623e6 <unknown>\n#3 0x557af0a62681 <unknown>\n#4 0x557af0aa7b04 <unknown>\n#5 0x557af0a8648d <unknown>\n#6 0x557af0aa4ed7 <unknown>\n#7 0x557af0a86203 <unknown>\n#8 0x557af0a54cc0 <unknown>\n#9 0x557af0a55c9e <unknown>\n#10 0x557af0ecad0b <unknown>\n#11 0x557af0ecec92 <unknown>\n#12 0x557af0eb7b3c <unknown>\n#13 0x557af0ecf807 <unknown>\n#14 0x557af0e9d0df <unknown>\n#15 0x557af0eec578 <unknown>\n#16 0x557af0eec740 <unknown>\n#17 0x557af0efc196 <unknown>\n#18 0x7f2f8fea4609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d5ef5009bedf6073aa086f7e5432f84\")>\nname = 'MyName1sNintondo2024', expected_error = '', check_type = 'group1'\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Test changing user name\")\n    @pytest.mark.parametrize(\"name, expected_error, check_type\", [\n        # (\"B0b\", \"The username must be between 4 and 20 characters long\", \"group2\"), # 3 characters\n        (\"\", \"Name can't be empty\", \"group2\"), # 0 characters\n        (\"A1ex\", \"\", \"group1\"), # 4 characters\n        (\"MyName1sNintondo2024\", \"\", \"group1\"), # 20 characters\n    ])\n    \n    def test_change_name(driver, name, expected_error, check_type):\n    \n        test_connect(driver)\n        time.sleep(0.5)\n    \n        menu = NintondoUserMenu(driver)\n        profile = Nickname(driver)\n    \n        menu.open_menu()\n        menu.menu_profile_btn()\n    \n        profile.nickname_btn()\n        profile.nickname_field(name)\n        profile.nickname_save_btn()\n    \n        if check_type == \"group1\":\n>           success_message = profile.get_success_message()\n\nmane_site_tests/test_nintondo_change_name.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mane_site/nintondo_profile.py:110: in get_success_message\n    return self.driver.find_element(By.XPATH, \"//div[@class='go4109123758']\").text\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fadd0787940>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x557af0eec740 \\\\u003Cunknown>\\\\n#17 0x557af0efc196 \\\\u003Cunknown>\\\\n#18 0x7f2f8fea4609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='go4109123758']\"}\nE         (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x557af0efd31a <unknown>\nE       #1 0x557af0a136e0 <unknown>\nE       #2 0x557af0a623e6 <unknown>\nE       #3 0x557af0a62681 <unknown>\nE       #4 0x557af0aa7b04 <unknown>\nE       #5 0x557af0a8648d <unknown>\nE       #6 0x557af0aa4ed7 <unknown>\nE       #7 0x557af0a86203 <unknown>\nE       #8 0x557af0a54cc0 <unknown>\nE       #9 0x557af0a55c9e <unknown>\nE       #10 0x557af0ecad0b <unknown>\nE       #11 0x557af0ecec92 <unknown>\nE       #12 0x557af0eb7b3c <unknown>\nE       #13 0x557af0ecf807 <unknown>\nE       #14 0x557af0e9d0df <unknown>\nE       #15 0x557af0eec578 <unknown>\nE       #16 0x557af0eec740 <unknown>\nE       #17 0x557af0efc196 <unknown>\nE       #18 0x7f2f8fea4609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732114263271,"stop":1732114263272,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732114313259,"stop":1732114313804,"duration":545},"status":"passed","steps":[],"attachments":[{"uid":"590b43befe6165e8","name":"Driver","source":"590b43befe6165e8.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='go4109123758']\"}\n  (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x557af0efd31a <unknown>\n#1 0x557af0a136e0 <unknown>\n#2 0x557af0a623e6 <unknown>\n#3 0x557af0a62681 <unknown>\n#4 0x557af0aa7b04 <unknown>\n#5 0x557af0a8648d <unknown>\n#6 0x557af0aa4ed7 <unknown>\n#7 0x557af0a86203 <unknown>\n#8 0x557af0a54cc0 <unknown>\n#9 0x557af0a55c9e <unknown>\n#10 0x557af0ecad0b <unknown>\n#11 0x557af0ecec92 <unknown>\n#12 0x557af0eb7b3c <unknown>\n#13 0x557af0ecf807 <unknown>\n#14 0x557af0e9d0df <unknown>\n#15 0x557af0eec578 <unknown>\n#16 0x557af0eec740 <unknown>\n#17 0x557af0efc196 <unknown>\n#18 0x7f2f8fea4609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d5ef5009bedf6073aa086f7e5432f84\")>\nname = 'MyName1sNintondo2024', expected_error = '', check_type = 'group1'\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Test changing user name\")\n    @pytest.mark.parametrize(\"name, expected_error, check_type\", [\n        # (\"B0b\", \"The username must be between 4 and 20 characters long\", \"group2\"), # 3 characters\n        (\"\", \"Name can't be empty\", \"group2\"), # 0 characters\n        (\"A1ex\", \"\", \"group1\"), # 4 characters\n        (\"MyName1sNintondo2024\", \"\", \"group1\"), # 20 characters\n    ])\n    \n    def test_change_name(driver, name, expected_error, check_type):\n    \n        test_connect(driver)\n        time.sleep(0.5)\n    \n        menu = NintondoUserMenu(driver)\n        profile = Nickname(driver)\n    \n        menu.open_menu()\n        menu.menu_profile_btn()\n    \n        profile.nickname_btn()\n        profile.nickname_field(name)\n        profile.nickname_save_btn()\n    \n        if check_type == \"group1\":\n>           success_message = profile.get_success_message()\n\nmane_site_tests/test_nintondo_change_name.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mane_site/nintondo_profile.py:110: in get_success_message\n    return self.driver.find_element(By.XPATH, \"//div[@class='go4109123758']\").text\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fadd0787940>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x557af0eec740 \\\\u003Cunknown>\\\\n#17 0x557af0efc196 \\\\u003Cunknown>\\\\n#18 0x7f2f8fea4609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class='go4109123758']\"}\nE         (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x557af0efd31a <unknown>\nE       #1 0x557af0a136e0 <unknown>\nE       #2 0x557af0a623e6 <unknown>\nE       #3 0x557af0a62681 <unknown>\nE       #4 0x557af0aa7b04 <unknown>\nE       #5 0x557af0a8648d <unknown>\nE       #6 0x557af0aa4ed7 <unknown>\nE       #7 0x557af0a86203 <unknown>\nE       #8 0x557af0a54cc0 <unknown>\nE       #9 0x557af0a55c9e <unknown>\nE       #10 0x557af0ecad0b <unknown>\nE       #11 0x557af0ecec92 <unknown>\nE       #12 0x557af0eb7b3c <unknown>\nE       #13 0x557af0ecf807 <unknown>\nE       #14 0x557af0e9d0df <unknown>\nE       #15 0x557af0eec578 <unknown>\nE       #16 0x557af0eec740 <unknown>\nE       #17 0x557af0efc196 <unknown>\nE       #18 0x7f2f8fea4609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[],"attachments":[{"uid":"3b4ecc296b83323","name":"Current ID","source":"3b4ecc296b83323.txt","type":"text/plain","size":44},{"uid":"6a052dcaabdb3185","name":"Password","source":"6a052dcaabdb3185.txt","type":"text/plain","size":75},{"uid":"af6bf3a79d7477a7","name":"Action","source":"af6bf3a79d7477a7.txt","type":"text/plain","size":20},{"uid":"40ed9a327d07a83c","name":"Action","source":"40ed9a327d07a83c.txt","type":"text/plain","size":40},{"uid":"c2f606217ed86750","name":"Action","source":"c2f606217ed86750.txt","type":"text/plain","size":34},{"uid":"42d517e326ff8462","name":"Action","source":"42d517e326ff8462.txt","type":"text/plain","size":23},{"uid":"8c94d2afdc8149d4","name":"Action","source":"8c94d2afdc8149d4.txt","type":"text/plain","size":38},{"uid":"a524c9e35a16e862","name":"Action","source":"a524c9e35a16e862.txt","type":"text/plain","size":21},{"uid":"ab510306439e6b19","name":"Balance","source":"ab510306439e6b19.txt","type":"text/plain","size":34},{"uid":"2fad7d536701807d","name":"Navigation","source":"2fad7d536701807d.txt","type":"text/plain","size":46},{"uid":"fca57f8dd2af2049","name":"Action","source":"fca57f8dd2af2049.txt","type":"text/plain","size":32},{"uid":"2aa762530cddac61","name":"Network Change Action","source":"2aa762530cddac61.txt","type":"text/plain","size":19},{"uid":"62fe5128bf32e61c","name":"Connect Button Action","source":"62fe5128bf32e61c.txt","type":"text/plain","size":30},{"uid":"bc378a0433282580","name":"Page Title","source":"bc378a0433282580.txt","type":"text/plain","size":12},{"uid":"c944c54da4c4cca6","name":"Window Switch Action","source":"c944c54da4c4cca6.txt","type":"text/plain","size":52},{"uid":"6bddd1c64e98ed8b","name":"Sign Button Action","source":"6bddd1c64e98ed8b.txt","type":"text/plain","size":34},{"uid":"ccfe9a0e7122ca2f","name":"Expand Menu Action","source":"ccfe9a0e7122ca2f.txt","type":"text/plain","size":26},{"uid":"27c2cabbce8f3d30","name":"Profile Button Action","source":"27c2cabbce8f3d30.txt","type":"text/plain","size":19},{"uid":"f4f1b7fd8b53d412","name":"Nickname Button Action","source":"f4f1b7fd8b53d412.txt","type":"text/plain","size":27},{"uid":"84fa827056561017","name":"Nickname Field Action","source":"84fa827056561017.txt","type":"text/plain","size":38},{"uid":"7e81684ff05e5fe7","name":"Save Nickname Button Action","source":"7e81684ff05e5fe7.txt","type":"text/plain","size":27}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":21,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732114327247,"stop":1732114327417,"duration":170},"status":"passed","steps":[],"attachments":[{"uid":"5030ae119d314489","name":"Screenshot","source":"5030ae119d314489.png","type":"image/png","size":180803}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Test changing user name"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.mane_site_tests"},{"name":"suite","value":"test_nintondo_change_name"},{"name":"host","value":"65b76ceb6c57"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.mane_site_tests.test_nintondo_change_name"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"check_type","value":"'group1'"},{"name":"expected_error","value":"''"},{"name":"name","value":"'MyName1sNintondo2024'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"dc3b1fab59503a12","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/40//#testresult/dc3b1fab59503a12","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bd1fc7c31a <unknown>\n#1 0x55bd1f7926e0 <unknown>\n#2 0x55bd1f7c9dc8 <unknown>\n#3 0x55bd1f7c5926 <unknown>\n#4 0x55bd1f8116f6 <unknown>\n#5 0x55bd1f810d46 <unknown>\n#6 0x55bd1f805203 <unknown>\n#7 0x55bd1f7d3cc0 <unknown>\n#8 0x55bd1f7d4c9e <unknown>\n#9 0x55bd1fc49d0b <unknown>\n#10 0x55bd1fc4dc92 <unknown>\n#11 0x55bd1fc36b3c <unknown>\n#12 0x55bd1fc4e807 <unknown>\n#13 0x55bd1fc1c0df <unknown>\n#14 0x55bd1fc6b578 <unknown>\n#15 0x55bd1fc6b740 <unknown>\n#16 0x55bd1fc7b196 <unknown>\n#17 0x7f472bd36609 start_thread","time":{"start":1732114013043,"stop":1732114013043,"duration":0}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"5d3ca3e3bdb8291.json","parameterValues":["'group1'","''","'MyName1sNintondo2024'"]}