{"uid":"b2fae94eabc1dfc1","name":"test_valid_minting_transfers","fullName":"tests.wallet_tests.test_wallet_mint_transfer#test_valid_minting_transfers","historyId":"afefd7bd02e1625af6b363aa55ab95cd","time":{"start":1732006909637,"stop":1732006914467,"duration":4830},"status":"failed","statusMessage":"AssertionError: Expected success message 'Transfer inscribed successfully', but got ''\nassert 'Transfer inscribed successfully' in ''","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a931d9c802813363c9d600ef15b8e8db\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.5)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n        assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\n    \n        # Extract and validate success message text\n        success_text = success_message.text\n        allure.attach(success_text, name=\"Success Message\", attachment_type=allure.attachment_type.TEXT)\n    \n        expected_success = \"Transfer inscribed successfully\"\n>       assert expected_success in success_text, (\n            f\"Expected success message '{expected_success}', but got '{success_text}'\"\n        )\nE       AssertionError: Expected success message 'Transfer inscribed successfully', but got ''\nE       assert 'Transfer inscribed successfully' in ''\n\nwallet_tests/test_wallet_mint_transfer.py:50: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732006831615,"stop":1732006831616,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732006909090,"stop":1732006909636,"duration":546},"status":"passed","steps":[],"attachments":[{"uid":"d9cdddddeeea95c5","name":"Driver","source":"d9cdddddeeea95c5.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected success message 'Transfer inscribed successfully', but got ''\nassert 'Transfer inscribed successfully' in ''","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a931d9c802813363c9d600ef15b8e8db\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.5)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n        assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\n    \n        # Extract and validate success message text\n        success_text = success_message.text\n        allure.attach(success_text, name=\"Success Message\", attachment_type=allure.attachment_type.TEXT)\n    \n        expected_success = \"Transfer inscribed successfully\"\n>       assert expected_success in success_text, (\n            f\"Expected success message '{expected_success}', but got '{success_text}'\"\n        )\nE       AssertionError: Expected success message 'Transfer inscribed successfully', but got ''\nE       assert 'Transfer inscribed successfully' in ''\n\nwallet_tests/test_wallet_mint_transfer.py:50: AssertionError","steps":[],"attachments":[{"uid":"b03e7bcf145f8334","name":"Current ID","source":"b03e7bcf145f8334.txt","type":"text/plain","size":44},{"uid":"4444d9bdb1275533","name":"Password","source":"4444d9bdb1275533.txt","type":"text/plain","size":61},{"uid":"d3f5425abaab7a92","name":"Action","source":"d3f5425abaab7a92.txt","type":"text/plain","size":20},{"uid":"dfe98e78b47ce537","name":"Action","source":"dfe98e78b47ce537.txt","type":"text/plain","size":40},{"uid":"41d8d25535e8eaf0","name":"Action","source":"41d8d25535e8eaf0.txt","type":"text/plain","size":34},{"uid":"9991e15d274a036f","name":"Action","source":"9991e15d274a036f.txt","type":"text/plain","size":23},{"uid":"3650dd2f1a986138","name":"Action","source":"3650dd2f1a986138.txt","type":"text/plain","size":38},{"uid":"6c5b12948f0acf72","name":"Action","source":"6c5b12948f0acf72.txt","type":"text/plain","size":21},{"uid":"e827e4f68decd509","name":"Action","source":"e827e4f68decd509.txt","type":"text/plain","size":46},{"uid":"b6d4575edb8c95c0","name":"Action","source":"b6d4575edb8c95c0.txt","type":"text/plain","size":32},{"uid":"47f73210ca8a2e58","name":"Action","source":"47f73210ca8a2e58.txt","type":"text/plain","size":17},{"uid":"b365d29aa83441a6","name":"Action","source":"b365d29aa83441a6.txt","type":"text/plain","size":16},{"uid":"70c0a248ba416482","name":"Transfer Balance","source":"70c0a248ba416482.txt","type":"text/plain","size":27},{"uid":"263737f6e641ec24","name":"Action","source":"263737f6e641ec24.txt","type":"text/plain","size":12},{"uid":"5c5a355bd9535c4","name":"Action","source":"5c5a355bd9535c4.txt","type":"text/plain","size":15},{"uid":"5a18d5b418dc8a61","name":"Action","source":"5a18d5b418dc8a61.txt","type":"text/plain","size":21},{"uid":"580dde97bd470283","name":"Action","source":"580dde97bd470283.txt","type":"text/plain","size":24},{"uid":"3857e53f2ee069f7","name":"Amount","source":"3857e53f2ee069f7.txt","type":"text/plain","size":19},{"uid":"ae0e68b99f0350d9","name":"Action","source":"ae0e68b99f0350d9.txt","type":"text/plain","size":19},{"uid":"39f5f05e40fd69b2","name":"Success Message","source":"39f5f05e40fd69b2.txt","type":"text/plain","size":0}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":20,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732006914510,"stop":1732006914644,"duration":134},"status":"passed","steps":[],"attachments":[{"uid":"3cf82ef31586a974","name":"Screenshot","source":"3cf82ef31586a974.png","type":"image/png","size":50874}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Valid minting transfers from the wallet"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_mint_transfer"},{"name":"host","value":"7cac2a83683c"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_mint_transfer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c4ad9703e5d8e80a","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/c4ad9703e5d8e80a","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"6a6a0fbe719df93dabfbf4a7d1cdb679\", element=\"f.6F410CE2B1451522DFB76B012238F61E.d.5583CC522AF233919B3BAE12F49B59B1.e.60\")>.is_displayed","time":{"start":1732002730947,"stop":1732002736570,"duration":5623}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"b2fae94eabc1dfc1.json","parameterValues":[]}