{"uid":"879bc61d7f2a88d4","name":"test_unlist_error_inscription","fullName":"tests.mane_site_tests.test_nintondo_inscription_buy#test_unlist_error_inscription","historyId":"07b0a1b50eae15febc0d55352e205977","time":{"start":1732272809053,"stop":1732272831768,"duration":22715},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5583c7dc131a <unknown>\n#1 0x5583c78d76e0 <unknown>\n#2 0x5583c79263e6 <unknown>\n#3 0x5583c7926681 <unknown>\n#4 0x5583c796bb04 <unknown>\n#5 0x5583c794a48d <unknown>\n#6 0x5583c7968ed7 <unknown>\n#7 0x5583c794a203 <unknown>\n#8 0x5583c7918cc0 <unknown>\n#9 0x5583c7919c9e <unknown>\n#10 0x5583c7d8ed0b <unknown>\n#11 0x5583c7d92c92 <unknown>\n#12 0x5583c7d7bb3c <unknown>\n#13 0x5583c7d93807 <unknown>\n#14 0x5583c7d610df <unknown>\n#15 0x5583c7db0578 <unknown>\n#16 0x5583c7db0740 <unknown>\n#17 0x5583c7dc0196 <unknown>\n#18 0x7f3b69409609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c1c25b831d1f72eb84e6ee27e635940\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @pytest.mark.skipif(test_passed, reason=\"Test skipped because the previous test passed\")\n    def test_unlist_error_inscription(driver):\n    \n        connect_valid_wallet(driver)\n    \n        inscription = Inscriptions(driver)\n    \n        driver.get('https://nintondo.io/belinals/address/tbel1qxdp6v2u0q0tthc67e8sz2t3udykz99yrmnmvc5?content_filter=images')\n    \n        inscription.select_inscription()\n        inscription.inscription_unlist()\n        time.sleep(0.5)\n>       inscription.inscription_unlist_btn()\n\nmane_site_tests/test_nintondo_inscription_buy.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mane_site/nintondo_profile.py:195: in inscription_unlist_btn\n    inscription_unlist_btn = wait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8c1c25b831d1f72eb84e6ee27e635940\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff89b037820>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5583c7dc131a <unknown>\nE       #1 0x5583c78d76e0 <unknown>\nE       #2 0x5583c79263e6 <unknown>\nE       #3 0x5583c7926681 <unknown>\nE       #4 0x5583c796bb04 <unknown>\nE       #5 0x5583c794a48d <unknown>\nE       #6 0x5583c7968ed7 <unknown>\nE       #7 0x5583c794a203 <unknown>\nE       #8 0x5583c7918cc0 <unknown>\nE       #9 0x5583c7919c9e <unknown>\nE       #10 0x5583c7d8ed0b <unknown>\nE       #11 0x5583c7d92c92 <unknown>\nE       #12 0x5583c7d7bb3c <unknown>\nE       #13 0x5583c7d93807 <unknown>\nE       #14 0x5583c7d610df <unknown>\nE       #15 0x5583c7db0578 <unknown>\nE       #16 0x5583c7db0740 <unknown>\nE       #17 0x5583c7dc0196 <unknown>\nE       #18 0x7f3b69409609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732272705344,"stop":1732272705345,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732272808418,"stop":1732272809052,"duration":634},"status":"passed","steps":[],"attachments":[{"uid":"8f01cfde1ac6ea02","name":"Driver","source":"8f01cfde1ac6ea02.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5583c7dc131a <unknown>\n#1 0x5583c78d76e0 <unknown>\n#2 0x5583c79263e6 <unknown>\n#3 0x5583c7926681 <unknown>\n#4 0x5583c796bb04 <unknown>\n#5 0x5583c794a48d <unknown>\n#6 0x5583c7968ed7 <unknown>\n#7 0x5583c794a203 <unknown>\n#8 0x5583c7918cc0 <unknown>\n#9 0x5583c7919c9e <unknown>\n#10 0x5583c7d8ed0b <unknown>\n#11 0x5583c7d92c92 <unknown>\n#12 0x5583c7d7bb3c <unknown>\n#13 0x5583c7d93807 <unknown>\n#14 0x5583c7d610df <unknown>\n#15 0x5583c7db0578 <unknown>\n#16 0x5583c7db0740 <unknown>\n#17 0x5583c7dc0196 <unknown>\n#18 0x7f3b69409609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c1c25b831d1f72eb84e6ee27e635940\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @pytest.mark.skipif(test_passed, reason=\"Test skipped because the previous test passed\")\n    def test_unlist_error_inscription(driver):\n    \n        connect_valid_wallet(driver)\n    \n        inscription = Inscriptions(driver)\n    \n        driver.get('https://nintondo.io/belinals/address/tbel1qxdp6v2u0q0tthc67e8sz2t3udykz99yrmnmvc5?content_filter=images')\n    \n        inscription.select_inscription()\n        inscription.inscription_unlist()\n        time.sleep(0.5)\n>       inscription.inscription_unlist_btn()\n\nmane_site_tests/test_nintondo_inscription_buy.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mane_site/nintondo_profile.py:195: in inscription_unlist_btn\n    inscription_unlist_btn = wait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8c1c25b831d1f72eb84e6ee27e635940\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff89b037820>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5583c7dc131a <unknown>\nE       #1 0x5583c78d76e0 <unknown>\nE       #2 0x5583c79263e6 <unknown>\nE       #3 0x5583c7926681 <unknown>\nE       #4 0x5583c796bb04 <unknown>\nE       #5 0x5583c794a48d <unknown>\nE       #6 0x5583c7968ed7 <unknown>\nE       #7 0x5583c794a203 <unknown>\nE       #8 0x5583c7918cc0 <unknown>\nE       #9 0x5583c7919c9e <unknown>\nE       #10 0x5583c7d8ed0b <unknown>\nE       #11 0x5583c7d92c92 <unknown>\nE       #12 0x5583c7d7bb3c <unknown>\nE       #13 0x5583c7d93807 <unknown>\nE       #14 0x5583c7d610df <unknown>\nE       #15 0x5583c7db0578 <unknown>\nE       #16 0x5583c7db0740 <unknown>\nE       #17 0x5583c7dc0196 <unknown>\nE       #18 0x7f3b69409609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"d693b75d1cf940ac","name":"Current ID","source":"d693b75d1cf940ac.txt","type":"text/plain","size":44},{"uid":"6ef9110b525c4f7d","name":"Password","source":"6ef9110b525c4f7d.txt","type":"text/plain","size":44},{"uid":"72a98a424d750e74","name":"Action","source":"72a98a424d750e74.txt","type":"text/plain","size":20},{"uid":"2ef4297f95c11049","name":"Action","source":"2ef4297f95c11049.txt","type":"text/plain","size":40},{"uid":"be42a428e73ec7fe","name":"Action","source":"be42a428e73ec7fe.txt","type":"text/plain","size":34},{"uid":"1ff7ee4b1e0eb66b","name":"Action","source":"1ff7ee4b1e0eb66b.txt","type":"text/plain","size":23},{"uid":"924214efce62dd93","name":"Action","source":"924214efce62dd93.txt","type":"text/plain","size":38},{"uid":"d9f56929c32fa8da","name":"Action","source":"d9f56929c32fa8da.txt","type":"text/plain","size":21},{"uid":"7d1859b150363bbe","name":"Balance","source":"7d1859b150363bbe.txt","type":"text/plain","size":34},{"uid":"5a5ff2972d66f9f7","name":"Navigation","source":"5a5ff2972d66f9f7.txt","type":"text/plain","size":46},{"uid":"e819997c3aeb72df","name":"Action","source":"e819997c3aeb72df.txt","type":"text/plain","size":32},{"uid":"7c3f053db4b17d5d","name":"Network Change Action","source":"7c3f053db4b17d5d.txt","type":"text/plain","size":19},{"uid":"8d513ba38b2519fb","name":"Connect Button Action","source":"8d513ba38b2519fb.txt","type":"text/plain","size":30},{"uid":"3a13790239d95a3c","name":"Page Title","source":"3a13790239d95a3c.txt","type":"text/plain","size":12},{"uid":"e43c2b8f8748221d","name":"Window Switch Action","source":"e43c2b8f8748221d.txt","type":"text/plain","size":52},{"uid":"4a03aad193ae84f1","name":"Sign Button Action","source":"4a03aad193ae84f1.txt","type":"text/plain","size":34},{"uid":"1df1c79485932671","name":"Select Inscription Action","source":"1df1c79485932671.txt","type":"text/plain","size":33},{"uid":"5ca47ec954e26023","name":"Unlist Inscription Action","source":"5ca47ec954e26023.txt","type":"text/plain","size":18}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":18,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732272831777,"stop":1732272831911,"duration":134},"status":"passed","steps":[],"attachments":[{"uid":"b21cc0f1d41b000b","name":"Screenshot","source":"b21cc0f1d41b000b.png","type":"image/png","size":80701}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.skipif(False, reason='Test skipped because the previous test passed')"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.mane_site_tests"},{"name":"suite","value":"test_nintondo_inscription_buy"},{"name":"host","value":"fc3c110a6a3b"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.mane_site_tests.test_nintondo_inscription_buy"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"e3aeaa98dfaa0a74","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/43//#testresult/e3aeaa98dfaa0a74","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55adc395931a <unknown>\n#1 0x55adc346f6e0 <unknown>\n#2 0x55adc34a6dc8 <unknown>\n#3 0x55adc34a2926 <unknown>\n#4 0x55adc34ee6f6 <unknown>\n#5 0x55adc34edd46 <unknown>\n#6 0x55adc34e2203 <unknown>\n#7 0x55adc34b0cc0 <unknown>\n#8 0x55adc34b1c9e <unknown>\n#9 0x55adc3926d0b <unknown>\n#10 0x55adc392ac92 <unknown>\n#11 0x55adc3913b3c <unknown>\n#12 0x55adc392b807 <unknown>\n#13 0x55adc38f90df <unknown>\n#14 0x55adc3948578 <unknown>\n#15 0x55adc3948740 <unknown>\n#16 0x55adc3958196 <unknown>\n#17 0x7f15eaa4f609 start_thread","time":{"start":1732272401052,"stop":1732272401052,"duration":0}}]},"tags":["@pytest.mark.skipif(False, reason='Test skipped because the previous test passed')","@pytest.mark.usefixtures('driver')"]},"source":"879bc61d7f2a88d4.json","parameterValues":[]}