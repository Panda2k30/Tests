{"uid":"ff33781f2dad3615","name":"test_valid_sending_transfers","fullName":"tests.wallet_tests.test_wallet_send_transfer#test_valid_sending_transfers","historyId":"898d03df45f80a262ac0dcc9bda2eeff","time":{"start":1733316837359,"stop":1733316842374,"duration":5015},"status":"failed","statusMessage":"AssertionError: Expected success message 'Successfully sended transfer(s)', but got 'Cannot read properties of undefined (reading 'split')'\nassert 'Successfully sended transfer(s)' in \"Cannot read properties of undefined (reading 'split')\"","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"507e7cb754f1296ddd85f56865a4cc76\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid sending transfers from the wallet\")\n    def test_valid_sending_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.send_btn()\n        bel_page.address_input(Data.VALID_ADDRESS_FOR_CHECK)\n        bel_page.select_amount()\n        bel_page.send_btn()\n    \n        success_message = WebDriverWait(driver, 10).until(\n        EC.visibility_of_element_located((By.XPATH, \"//div[contains(@class, 'toast ')]\"))\n        )\n        assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\n    \n        # Extract and validate success message text\n        success_text = success_message.text\n        allure.attach(f\"Success message: {success_text}\", name=\"Success Message\", attachment_type=allure.attachment_type.TEXT)\n    \n        expected_success = \"Successfully sended transfer(s)\"\n>       assert expected_success in success_text, (\n            f\"Expected success message '{expected_success}', but got '{success_text}'\"\n        )\nE       AssertionError: Expected success message 'Successfully sended transfer(s)', but got 'Cannot read properties of undefined (reading 'split')'\nE       assert 'Successfully sended transfer(s)' in \"Cannot read properties of undefined (reading 'split')\"\n\nwallet_tests/test_wallet_send_transfer.py:51: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733316704112,"stop":1733316704113,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1733316836798,"stop":1733316837358,"duration":560},"status":"passed","steps":[],"attachments":[{"uid":"1f5787447ab85d7d","name":"Driver","source":"1f5787447ab85d7d.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected success message 'Successfully sended transfer(s)', but got 'Cannot read properties of undefined (reading 'split')'\nassert 'Successfully sended transfer(s)' in \"Cannot read properties of undefined (reading 'split')\"","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"507e7cb754f1296ddd85f56865a4cc76\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid sending transfers from the wallet\")\n    def test_valid_sending_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.send_btn()\n        bel_page.address_input(Data.VALID_ADDRESS_FOR_CHECK)\n        bel_page.select_amount()\n        bel_page.send_btn()\n    \n        success_message = WebDriverWait(driver, 10).until(\n        EC.visibility_of_element_located((By.XPATH, \"//div[contains(@class, 'toast ')]\"))\n        )\n        assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\n    \n        # Extract and validate success message text\n        success_text = success_message.text\n        allure.attach(f\"Success message: {success_text}\", name=\"Success Message\", attachment_type=allure.attachment_type.TEXT)\n    \n        expected_success = \"Successfully sended transfer(s)\"\n>       assert expected_success in success_text, (\n            f\"Expected success message '{expected_success}', but got '{success_text}'\"\n        )\nE       AssertionError: Expected success message 'Successfully sended transfer(s)', but got 'Cannot read properties of undefined (reading 'split')'\nE       assert 'Successfully sended transfer(s)' in \"Cannot read properties of undefined (reading 'split')\"\n\nwallet_tests/test_wallet_send_transfer.py:51: AssertionError","steps":[],"attachments":[{"uid":"b78cda216fe9211c","name":"Current ID","source":"b78cda216fe9211c.txt","type":"text/plain","size":44},{"uid":"647a917fa9896bd3","name":"Password","source":"647a917fa9896bd3.txt","type":"text/plain","size":80},{"uid":"80335696b698df68","name":"Action","source":"80335696b698df68.txt","type":"text/plain","size":20},{"uid":"9eba341239bf4d0e","name":"Action","source":"9eba341239bf4d0e.txt","type":"text/plain","size":40},{"uid":"e3f40a3223144693","name":"Action","source":"e3f40a3223144693.txt","type":"text/plain","size":34},{"uid":"535e7ed40c7388db","name":"Action","source":"535e7ed40c7388db.txt","type":"text/plain","size":23},{"uid":"8834fae779e2e319","name":"Action","source":"8834fae779e2e319.txt","type":"text/plain","size":38},{"uid":"c5b3bcc3898ee37b","name":"Action","source":"c5b3bcc3898ee37b.txt","type":"text/plain","size":21},{"uid":"c2ca8a038d74dca1","name":"Action","source":"c2ca8a038d74dca1.txt","type":"text/plain","size":46},{"uid":"86e85f93e6c475d1","name":"Action","source":"86e85f93e6c475d1.txt","type":"text/plain","size":32},{"uid":"135cd941c51c3cc2","name":"Action","source":"135cd941c51c3cc2.txt","type":"text/plain","size":17},{"uid":"61c2311ec818aa51","name":"Action","source":"61c2311ec818aa51.txt","type":"text/plain","size":16},{"uid":"67a6b81c3b7e088e","name":"Balance","source":"67a6b81c3b7e088e.txt","type":"text/plain","size":14},{"uid":"a6814f49f61ce1ac","name":"Action","source":"a6814f49f61ce1ac.txt","type":"text/plain","size":12},{"uid":"2d975920686d95a5","name":"Action","source":"2d975920686d95a5.txt","type":"text/plain","size":15},{"uid":"6170f906e0e2caf4","name":"Action","source":"6170f906e0e2caf4.txt","type":"text/plain","size":21},{"uid":"87257c2ec6d89ca","name":"Action","source":"87257c2ec6d89ca.txt","type":"text/plain","size":15},{"uid":"79adc92ba7967c6b","name":"Address Input","source":"79adc92ba7967c6b.txt","type":"text/plain","size":63},{"uid":"180f7af76388e19f","name":"Action","source":"180f7af76388e19f.txt","type":"text/plain","size":26},{"uid":"d55ec70a421fb064","name":"Action","source":"d55ec70a421fb064.txt","type":"text/plain","size":15},{"uid":"905fe89b6cfad20d","name":"Success Message","source":"905fe89b6cfad20d.txt","type":"text/plain","size":70}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":21,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1733316842378,"stop":1733316842515,"duration":137},"status":"passed","steps":[],"attachments":[{"uid":"cabc712e41e2dbfb","name":"Screenshot","source":"cabc712e41e2dbfb.png","type":"image/png","size":47992}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Valid sending transfers from the wallet"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_send_transfer"},{"name":"host","value":"7f43bf9271f1"},{"name":"thread","value":"7-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_send_transfer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":2,"skipped":0,"passed":5,"unknown":0,"total":12},"items":[{"uid":"ad68a9388df999bd","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/47//#testresult/ad68a9388df999bd","status":"passed","time":{"start":1733051069400,"stop":1733051074953,"duration":5553}},{"uid":"8cbd02c89baf038c","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/46//#testresult/8cbd02c89baf038c","status":"passed","time":{"start":1732888196983,"stop":1732888202599,"duration":5616}},{"uid":"d522d5fd1ec670dd","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/45//#testresult/d522d5fd1ec670dd","status":"passed","time":{"start":1732518640453,"stop":1732518646486,"duration":6033}},{"uid":"f7438d3a8bc9c03f","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/44//#testresult/f7438d3a8bc9c03f","status":"passed","time":{"start":1732273044028,"stop":1732273049793,"duration":5765}},{"uid":"751427d40fa36b6b","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/43//#testresult/751427d40fa36b6b","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e549a6431a <unknown>\n#1 0x55e54957a6e0 <unknown>\n#2 0x55e5495b1dc8 <unknown>\n#3 0x55e5495ad926 <unknown>\n#4 0x55e5495f96f6 <unknown>\n#5 0x55e5495f8d46 <unknown>\n#6 0x55e5495ed203 <unknown>\n#7 0x55e5495bbcc0 <unknown>\n#8 0x55e5495bcc9e <unknown>\n#9 0x55e549a31d0b <unknown>\n#10 0x55e549a35c92 <unknown>\n#11 0x55e549a1eb3c <unknown>\n#12 0x55e549a36807 <unknown>\n#13 0x55e549a040df <unknown>\n#14 0x55e549a53578 <unknown>\n#15 0x55e549a53740 <unknown>\n#16 0x55e549a63196 <unknown>\n#17 0x7fc4f018b609 start_thread","time":{"start":1732272408854,"stop":1732272408854,"duration":0}},{"uid":"53fd290984f4cedb","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/42//#testresult/53fd290984f4cedb","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"754575e0a4e2fbf2bd2a76d08d0237df\", element=\"f.37BC0D742A1D1EA1A0E4471771E46944.d.62183B49BE8B707F90FA0A4ECBCC3A4D.e.58\")>.is_displayed","time":{"start":1732271512844,"stop":1732271517974,"duration":5130}},{"uid":"a2bf3355fb14e940","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/41//#testresult/a2bf3355fb14e940","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"a245f9dec6da9ed0efcf8fa426dc4d1a\", element=\"f.B6008BABD3BEBE4D40B6E8CF05771796.d.5EAD598BEDADA3B49D4E806D8A46118A.e.80\")>.is_displayed","time":{"start":1732114496834,"stop":1732114502066,"duration":5232}},{"uid":"3aff0b3d2fb15b2a","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/40//#testresult/3aff0b3d2fb15b2a","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a6c8b1831a <unknown>\n#1 0x55a6c862e6e0 <unknown>\n#2 0x55a6c8665dc8 <unknown>\n#3 0x55a6c8661926 <unknown>\n#4 0x55a6c86ad6f6 <unknown>\n#5 0x55a6c86acd46 <unknown>\n#6 0x55a6c86a1203 <unknown>\n#7 0x55a6c866fcc0 <unknown>\n#8 0x55a6c8670c9e <unknown>\n#9 0x55a6c8ae5d0b <unknown>\n#10 0x55a6c8ae9c92 <unknown>\n#11 0x55a6c8ad2b3c <unknown>\n#12 0x55a6c8aea807 <unknown>\n#13 0x55a6c8ab80df <unknown>\n#14 0x55a6c8b07578 <unknown>\n#15 0x55a6c8b07740 <unknown>\n#16 0x55a6c8b17196 <unknown>\n#17 0x7fb72d3ac609 start_thread","time":{"start":1732114021102,"stop":1732114021102,"duration":0}},{"uid":"5f5cd195f5053303","reportUrl":"https://Panda2k30.github.io/Tests/39//#testresult/5f5cd195f5053303","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3d9df1ae495f76476a218957722910fc\", element=\"f.DEC40D804AC69ED80874FB9F47E3C613.d.A87E1784B45E89DC5804AD049DE0F272.e.65\")>.is_displayed","time":{"start":1732008878426,"stop":1732008883337,"duration":4911}},{"uid":"c5cb002bb15be412","reportUrl":"https://Panda2k30.github.io/Tests/38//#testresult/c5cb002bb15be412","status":"passed","time":{"start":1732007007119,"stop":1732007012622,"duration":5503}},{"uid":"8f9882efcf5df3ed","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/8f9882efcf5df3ed","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"35dc316ce47d852b3b2792a44b89205c\", element=\"f.17ED124E95B62089E5F0EF9BF72D7FD9.d.1745489FBF7E409F5EE7181917F92DD2.e.57\")>.is_displayed","time":{"start":1732002832652,"stop":1732002838158,"duration":5506}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"ff33781f2dad3615.json","parameterValues":[]}