{"uid":"14e3c686ef333a6e","name":"test_valid_sending_inscriptions_zero_wallet","fullName":"tests.wallet_tests.test_wallet_send_inscription#test_valid_sending_inscriptions_zero_wallet","historyId":"e85dd4453e1e88f37e757b064e84eccd","time":{"start":1733381930751,"stop":1733381938168,"duration":7417},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'toast ')]\"}\n  (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x559110db034a <unknown>\n#1 0x5591108c66e0 <unknown>\n#2 0x5591109153e6 <unknown>\n#3 0x559110915681 <unknown>\n#4 0x55911095ab04 <unknown>\n#5 0x55911093948d <unknown>\n#6 0x559110957ed7 <unknown>\n#7 0x559110939203 <unknown>\n#8 0x559110907cc0 <unknown>\n#9 0x559110908c9e <unknown>\n#10 0x559110d7dd3b <unknown>\n#11 0x559110d81cc2 <unknown>\n#12 0x559110d6ab6c <unknown>\n#13 0x559110d82837 <unknown>\n#14 0x559110d5010f <unknown>\n#15 0x559110d9f5a8 <unknown>\n#16 0x559110d9f770 <unknown>\n#17 0x559110daf1c6 <unknown>\n#18 0x7f35b37e8609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0dc4d44658bcf6f9ba7366fedc8740b3\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Verification of sending inscription from a wallet without a balance\")\n    def test_valid_sending_inscriptions_zero_wallet(driver):\n    \n        # Private key authentication\n        ex_id, password = restore_zero_balance_wallet(driver)\n    \n        change_network = ManePage(driver)\n    \n        change_network.change_network(ex_id) # change network to Testnet\n        change_network.get_balance()\n    \n        change_network.account_address_btn()\n        change_network.nft_page_btn()\n    \n        nft_page = SendInscription(driver)\n    \n        nft_page.select_inscription()\n        nft_page.return_id_card()\n    \n        nft_page.send_btn()\n    \n        nft_page.enter_address(Data.VALID_ADDRESS_FOR_CHECK)\n        nft_page.continue_btn()\n    \n        time.sleep(0.3)\n>       error_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n\nwallet_tests/test_wallet_send_inscription.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2902f86220>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x559110d9f770 \\\\u003Cunknown>\\\\n#17 0x559110daf1c6 \\\\u003Cunknown>\\\\n#18 0x7f35b37e8609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'toast ')]\"}\nE         (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x559110db034a <unknown>\nE       #1 0x5591108c66e0 <unknown>\nE       #2 0x5591109153e6 <unknown>\nE       #3 0x559110915681 <unknown>\nE       #4 0x55911095ab04 <unknown>\nE       #5 0x55911093948d <unknown>\nE       #6 0x559110957ed7 <unknown>\nE       #7 0x559110939203 <unknown>\nE       #8 0x559110907cc0 <unknown>\nE       #9 0x559110908c9e <unknown>\nE       #10 0x559110d7dd3b <unknown>\nE       #11 0x559110d81cc2 <unknown>\nE       #12 0x559110d6ab6c <unknown>\nE       #13 0x559110d82837 <unknown>\nE       #14 0x559110d5010f <unknown>\nE       #15 0x559110d9f5a8 <unknown>\nE       #16 0x559110d9f770 <unknown>\nE       #17 0x559110daf1c6 <unknown>\nE       #18 0x7f35b37e8609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733381831488,"stop":1733381831489,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1733381930183,"stop":1733381930750,"duration":567},"status":"passed","steps":[],"attachments":[{"uid":"da470e6f19190be5","name":"Driver","source":"da470e6f19190be5.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'toast ')]\"}\n  (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x559110db034a <unknown>\n#1 0x5591108c66e0 <unknown>\n#2 0x5591109153e6 <unknown>\n#3 0x559110915681 <unknown>\n#4 0x55911095ab04 <unknown>\n#5 0x55911093948d <unknown>\n#6 0x559110957ed7 <unknown>\n#7 0x559110939203 <unknown>\n#8 0x559110907cc0 <unknown>\n#9 0x559110908c9e <unknown>\n#10 0x559110d7dd3b <unknown>\n#11 0x559110d81cc2 <unknown>\n#12 0x559110d6ab6c <unknown>\n#13 0x559110d82837 <unknown>\n#14 0x559110d5010f <unknown>\n#15 0x559110d9f5a8 <unknown>\n#16 0x559110d9f770 <unknown>\n#17 0x559110daf1c6 <unknown>\n#18 0x7f35b37e8609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0dc4d44658bcf6f9ba7366fedc8740b3\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Verification of sending inscription from a wallet without a balance\")\n    def test_valid_sending_inscriptions_zero_wallet(driver):\n    \n        # Private key authentication\n        ex_id, password = restore_zero_balance_wallet(driver)\n    \n        change_network = ManePage(driver)\n    \n        change_network.change_network(ex_id) # change network to Testnet\n        change_network.get_balance()\n    \n        change_network.account_address_btn()\n        change_network.nft_page_btn()\n    \n        nft_page = SendInscription(driver)\n    \n        nft_page.select_inscription()\n        nft_page.return_id_card()\n    \n        nft_page.send_btn()\n    \n        nft_page.enter_address(Data.VALID_ADDRESS_FOR_CHECK)\n        nft_page.continue_btn()\n    \n        time.sleep(0.3)\n>       error_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n\nwallet_tests/test_wallet_send_inscription.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2902f86220>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x559110d9f770 \\\\u003Cunknown>\\\\n#17 0x559110daf1c6 \\\\u003Cunknown>\\\\n#18 0x7f35b37e8609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'toast ')]\"}\nE         (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x559110db034a <unknown>\nE       #1 0x5591108c66e0 <unknown>\nE       #2 0x5591109153e6 <unknown>\nE       #3 0x559110915681 <unknown>\nE       #4 0x55911095ab04 <unknown>\nE       #5 0x55911093948d <unknown>\nE       #6 0x559110957ed7 <unknown>\nE       #7 0x559110939203 <unknown>\nE       #8 0x559110907cc0 <unknown>\nE       #9 0x559110908c9e <unknown>\nE       #10 0x559110d7dd3b <unknown>\nE       #11 0x559110d81cc2 <unknown>\nE       #12 0x559110d6ab6c <unknown>\nE       #13 0x559110d82837 <unknown>\nE       #14 0x559110d5010f <unknown>\nE       #15 0x559110d9f5a8 <unknown>\nE       #16 0x559110d9f770 <unknown>\nE       #17 0x559110daf1c6 <unknown>\nE       #18 0x7f35b37e8609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[],"attachments":[{"uid":"4e98addb81fcdc02","name":"Current ID","source":"4e98addb81fcdc02.txt","type":"text/plain","size":44},{"uid":"f71cc11def6cb6a7","name":"Password","source":"f71cc11def6cb6a7.txt","type":"text/plain","size":46},{"uid":"7869a3aaebb6c235","name":"Action","source":"7869a3aaebb6c235.txt","type":"text/plain","size":20},{"uid":"8e65935de07e68a5","name":"Action","source":"8e65935de07e68a5.txt","type":"text/plain","size":40},{"uid":"50d6733785fa68a","name":"Action","source":"50d6733785fa68a.txt","type":"text/plain","size":34},{"uid":"13e1ab7d3ba86179","name":"Action","source":"13e1ab7d3ba86179.txt","type":"text/plain","size":23},{"uid":"f3957de6203c8c1e","name":"Action","source":"f3957de6203c8c1e.txt","type":"text/plain","size":38},{"uid":"2c42d62d051dd5de","name":"Action","source":"2c42d62d051dd5de.txt","type":"text/plain","size":21},{"uid":"c351da3e872c24d1","name":"Navigation","source":"c351da3e872c24d1.txt","type":"text/plain","size":46},{"uid":"75b95f6d6a7c502e","name":"Action","source":"75b95f6d6a7c502e.txt","type":"text/plain","size":32},{"uid":"31bd136cbb654d75","name":"Balance","source":"31bd136cbb654d75.txt","type":"text/plain","size":34},{"uid":"718cac8b91cba5a6","name":"Account Address","source":"718cac8b91cba5a6.txt","type":"text/plain","size":92},{"uid":"2b00607f55a2b3a3","name":"Action","source":"2b00607f55a2b3a3.txt","type":"text/plain","size":12},{"uid":"6d981738a94fe12e","name":"Action","source":"6d981738a94fe12e.txt","type":"text/plain","size":24},{"uid":"5c02306e44f3bcd","name":"ID Card","source":"5c02306e44f3bcd.txt","type":"text/plain","size":91},{"uid":"db9a1414b4d322f2","name":"Action","source":"db9a1414b4d322f2.txt","type":"text/plain","size":18},{"uid":"2969cec295dd5da7","name":"Address Input","source":"2969cec295dd5da7.txt","type":"text/plain","size":71},{"uid":"c2dadba64d72f426","name":"Action","source":"c2dadba64d72f426.txt","type":"text/plain","size":22}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":18,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1733381938188,"stop":1733381938313,"duration":125},"status":"passed","steps":[],"attachments":[{"uid":"f40ffca44d8745c7","name":"Screenshot","source":"f40ffca44d8745c7.png","type":"image/png","size":36787}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Verification of sending inscription from a wallet without a balance"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_send_inscription"},{"name":"host","value":"e07d5fe77d26"},{"name":"thread","value":"7-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_send_inscription"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":4,"skipped":0,"passed":5,"unknown":0,"total":13},"items":[{"uid":"ba4d7f2c52af6ef8","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/48//#testresult/ba4d7f2c52af6ef8","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'toast ')]\"}\n  (Session info: chrome=131.0.6778.108); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5581bf96434a <unknown>\n#1 0x5581bf47a6e0 <unknown>\n#2 0x5581bf4c93e6 <unknown>\n#3 0x5581bf4c9681 <unknown>\n#4 0x5581bf50eb04 <unknown>\n#5 0x5581bf4ed48d <unknown>\n#6 0x5581bf50bed7 <unknown>\n#7 0x5581bf4ed203 <unknown>\n#8 0x5581bf4bbcc0 <unknown>\n#9 0x5581bf4bcc9e <unknown>\n#10 0x5581bf931d3b <unknown>\n#11 0x5581bf935cc2 <unknown>\n#12 0x5581bf91eb6c <unknown>\n#13 0x5581bf936837 <unknown>\n#14 0x5581bf90410f <unknown>\n#15 0x5581bf9535a8 <unknown>\n#16 0x5581bf953770 <unknown>\n#17 0x5581bf9631c6 <unknown>\n#18 0x7fab1e7c8609 start_thread","time":{"start":1733316802992,"stop":1733316810452,"duration":7460}},{"uid":"2289634045b73e1c","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/47//#testresult/2289634045b73e1c","status":"passed","time":{"start":1733051040001,"stop":1733051043330,"duration":3329}},{"uid":"d26336a850043e5e","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/46//#testresult/d26336a850043e5e","status":"passed","time":{"start":1732888167349,"stop":1732888170701,"duration":3352}},{"uid":"e8caca568a20b193","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/45//#testresult/e8caca568a20b193","status":"failed","statusDetails":"AssertionError: Expected error message 'Balance not enough to pay network fee.', but got 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'\nassert 'Balance not enough to pay network fee.' in 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'","time":{"start":1732518609957,"stop":1732518613353,"duration":3396}},{"uid":"3fdc1faa058246b5","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/44//#testresult/3fdc1faa058246b5","status":"failed","statusDetails":"AssertionError: Expected error message 'Balance not enough to pay network fee.', but got 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'\nassert 'Balance not enough to pay network fee.' in 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'","time":{"start":1732273011634,"stop":1732273015028,"duration":3394}},{"uid":"7e7bdfef0846b05e","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/43//#testresult/7e7bdfef0846b05e","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x561f9415631a <unknown>\n#1 0x561f93c6c6e0 <unknown>\n#2 0x561f93ca3dc8 <unknown>\n#3 0x561f93c9f926 <unknown>\n#4 0x561f93ceb6f6 <unknown>\n#5 0x561f93cead46 <unknown>\n#6 0x561f93cdf203 <unknown>\n#7 0x561f93cadcc0 <unknown>\n#8 0x561f93caec9e <unknown>\n#9 0x561f94123d0b <unknown>\n#10 0x561f94127c92 <unknown>\n#11 0x561f94110b3c <unknown>\n#12 0x561f94128807 <unknown>\n#13 0x561f940f60df <unknown>\n#14 0x561f94145578 <unknown>\n#15 0x561f94145740 <unknown>\n#16 0x561f94155196 <unknown>\n#17 0x7f34be73c609 start_thread","time":{"start":1732272407247,"stop":1732272407247,"duration":0}},{"uid":"412acee884802d22","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/42//#testresult/412acee884802d22","status":"failed","statusDetails":"AssertionError: Expected error message 'Balance not enough to pay network fee.', but got 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'\nassert 'Balance not enough to pay network fee.' in 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'","time":{"start":1732271480654,"stop":1732271484138,"duration":3484}},{"uid":"ea2c4e1196a19dc0","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/41//#testresult/ea2c4e1196a19dc0","status":"failed","statusDetails":"AssertionError: Expected error message 'Balance not enough to pay network fee.', but got 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'\nassert 'Balance not enough to pay network fee.' in 'Insufficient balance. Non-Inscription balance (0 BEL) is lower than 0.0000522 BEL'","time":{"start":1732114466900,"stop":1732114470233,"duration":3333}},{"uid":"9930ea8fde04865e","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/40//#testresult/9930ea8fde04865e","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e55c5d931a <unknown>\n#1 0x55e55c0ef6e0 <unknown>\n#2 0x55e55c126dc8 <unknown>\n#3 0x55e55c122926 <unknown>\n#4 0x55e55c16e6f6 <unknown>\n#5 0x55e55c16dd46 <unknown>\n#6 0x55e55c162203 <unknown>\n#7 0x55e55c130cc0 <unknown>\n#8 0x55e55c131c9e <unknown>\n#9 0x55e55c5a6d0b <unknown>\n#10 0x55e55c5aac92 <unknown>\n#11 0x55e55c593b3c <unknown>\n#12 0x55e55c5ab807 <unknown>\n#13 0x55e55c5790df <unknown>\n#14 0x55e55c5c8578 <unknown>\n#15 0x55e55c5c8740 <unknown>\n#16 0x55e55c5d8196 <unknown>\n#17 0x7f170d6fd609 start_thread","time":{"start":1732114019494,"stop":1732114019494,"duration":0}},{"uid":"6b2a94357b3c5fe4","reportUrl":"https://Panda2k30.github.io/Tests/39//#testresult/6b2a94357b3c5fe4","status":"passed","time":{"start":1732008846272,"stop":1732008849635,"duration":3363}},{"uid":"5f63ccb53b073487","reportUrl":"https://Panda2k30.github.io/Tests/38//#testresult/5f63ccb53b073487","status":"passed","time":{"start":1732006975087,"stop":1732006978890,"duration":3803}},{"uid":"e2c8474eff276641","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/e2c8474eff276641","status":"passed","time":{"start":1732002799214,"stop":1732002803085,"duration":3871}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"14e3c686ef333a6e.json","parameterValues":[]}