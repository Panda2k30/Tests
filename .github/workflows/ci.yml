name: CI

on:
  push:
    branches:
      - main  # Основная ветка
  pull_request:
    branches:
      - main  # Основная ветка

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

      - name: Add Docker’s official GPG key
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

      - name: Set up the Docker repository
        run: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker Compose installation
        run: docker-compose --version

      - name: Install Allure commandline
        run: |
          curl -o allure-2.19.0.tgz -L https://github.com/allure-framework/allure2/releases/download/2.19.0/allure-2.19.0.tgz
          tar -zxvf allure-2.19.0.tgz
          sudo mv allure-2.19.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Build and start Docker containers
        run: docker-compose up --build -d

      - name: Run tests with pytest
        run: |
          docker exec selenium-tests pytest --maxfail=0 --continue-on-collection-errors --alluredir=/app/allure-results
        continue-on-error: true  # Позволяет продолжить выполнение даже при ошибках тестов

      - name: Generate Allure report
        run: |
          docker exec selenium-tests allure generate /app/allure-results --clean -o /app/allure-report
        if: always()  # Убедитесь, что отчет создается даже при ошибках тестов

      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ./allure-report

      - name: Post Allure report link
        run: |
          echo "Allure Report available at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"

      - name: Stop Docker containers
        run: docker-compose down
        if: always()  # Убедитесь, что контейнеры останавливаются всегда
