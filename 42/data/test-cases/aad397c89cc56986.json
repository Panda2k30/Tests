{"uid":"aad397c89cc56986","name":"test_valid_minting_transfers","fullName":"tests.wallet_tests.test_wallet_mint_transfer#test_valid_minting_transfers","historyId":"afefd7bd02e1625af6b363aa55ab95cd","time":{"start":1732271413678,"stop":1732271418819,"duration":5141},"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"dcb46822808a00c84e60226f72db5b60\", element=\"f.68E122E14388C851A889B73F6D16C4B7.d.D0945E3CE548ED9C7481F0B0B9B55853.e.49\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dcb46822808a00c84e60226f72db5b60\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.6)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"dcb46822808a00c84e60226f72db5b60\", element=\"f.68E122E14388C851A889B73F6D16C4B7.d.D0945E3CE548ED9C7481F0B0B9B55853.e.49\")>.is_displayed\n\nwallet_tests/test_wallet_mint_transfer.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732271255815,"stop":1732271255816,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732271413039,"stop":1732271413678,"duration":639},"status":"passed","steps":[],"attachments":[{"uid":"6bd4015814f40044","name":"Driver","source":"6bd4015814f40044.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"dcb46822808a00c84e60226f72db5b60\", element=\"f.68E122E14388C851A889B73F6D16C4B7.d.D0945E3CE548ED9C7481F0B0B9B55853.e.49\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dcb46822808a00c84e60226f72db5b60\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.6)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"dcb46822808a00c84e60226f72db5b60\", element=\"f.68E122E14388C851A889B73F6D16C4B7.d.D0945E3CE548ED9C7481F0B0B9B55853.e.49\")>.is_displayed\n\nwallet_tests/test_wallet_mint_transfer.py:43: AssertionError","steps":[],"attachments":[{"uid":"a87080de38066f6c","name":"Current ID","source":"a87080de38066f6c.txt","type":"text/plain","size":44},{"uid":"9910226e3e8659ea","name":"Password","source":"9910226e3e8659ea.txt","type":"text/plain","size":53},{"uid":"10ebf51f6523fde7","name":"Action","source":"10ebf51f6523fde7.txt","type":"text/plain","size":20},{"uid":"93b1798f62eff65","name":"Action","source":"93b1798f62eff65.txt","type":"text/plain","size":40},{"uid":"d8ee3f4749fece6","name":"Action","source":"d8ee3f4749fece6.txt","type":"text/plain","size":34},{"uid":"b8bef8e1047d7264","name":"Action","source":"b8bef8e1047d7264.txt","type":"text/plain","size":23},{"uid":"2f046a8b7823410f","name":"Action","source":"2f046a8b7823410f.txt","type":"text/plain","size":38},{"uid":"9384f6bcb760969d","name":"Action","source":"9384f6bcb760969d.txt","type":"text/plain","size":21},{"uid":"2f8e290ece40c9c6","name":"Action","source":"2f8e290ece40c9c6.txt","type":"text/plain","size":46},{"uid":"adea0d31937414cc","name":"Action","source":"adea0d31937414cc.txt","type":"text/plain","size":32},{"uid":"f394984f460dd36c","name":"Action","source":"f394984f460dd36c.txt","type":"text/plain","size":17},{"uid":"e989f6de4e2b499b","name":"Action","source":"e989f6de4e2b499b.txt","type":"text/plain","size":16},{"uid":"866f5f406de38521","name":"Transfer Balance","source":"866f5f406de38521.txt","type":"text/plain","size":26},{"uid":"b7ce5b3d75559d3e","name":"Action","source":"b7ce5b3d75559d3e.txt","type":"text/plain","size":12},{"uid":"bd7c294fa38a2637","name":"Action","source":"bd7c294fa38a2637.txt","type":"text/plain","size":15},{"uid":"1156e73f7009d8f1","name":"Action","source":"1156e73f7009d8f1.txt","type":"text/plain","size":21},{"uid":"d15fd1685aa1e05f","name":"Action","source":"d15fd1685aa1e05f.txt","type":"text/plain","size":24},{"uid":"89333c74e1d0385f","name":"Amount","source":"89333c74e1d0385f.txt","type":"text/plain","size":19},{"uid":"a6411b948b25fc21","name":"Action","source":"a6411b948b25fc21.txt","type":"text/plain","size":19}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":19,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732271418823,"stop":1732271418976,"duration":153},"status":"passed","steps":[],"attachments":[{"uid":"b98b5a38021f6cb1","name":"Screenshot","source":"b98b5a38021f6cb1.png","type":"image/png","size":49798}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Valid minting transfers from the wallet"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_mint_transfer"},{"name":"host","value":"5cb7560cca1f"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_mint_transfer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"422f525ad354dbdb","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/41//#testresult/422f525ad354dbdb","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"d26011b7e62cbe4b8a4447cc6da7c3e6\", element=\"f.880651576845F854FB28FE6DCF9524F5.d.C26753B30E95C3F92D0F3BA2E9198FAC.e.62\")>.is_displayed","time":{"start":1732114399493,"stop":1732114407142,"duration":7649}},{"uid":"f6a45fb2c10c9871","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/40//#testresult/f6a45fb2c10c9871","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55af6297d31a <unknown>\n#1 0x55af624936e0 <unknown>\n#2 0x55af624cadc8 <unknown>\n#3 0x55af624c6926 <unknown>\n#4 0x55af625126f6 <unknown>\n#5 0x55af62511d46 <unknown>\n#6 0x55af62506203 <unknown>\n#7 0x55af624d4cc0 <unknown>\n#8 0x55af624d5c9e <unknown>\n#9 0x55af6294ad0b <unknown>\n#10 0x55af6294ec92 <unknown>\n#11 0x55af62937b3c <unknown>\n#12 0x55af6294f807 <unknown>\n#13 0x55af6291d0df <unknown>\n#14 0x55af6296c578 <unknown>\n#15 0x55af6296c740 <unknown>\n#16 0x55af6297c196 <unknown>\n#17 0x7f11c4ec4609 start_thread","time":{"start":1732114015826,"stop":1732114015826,"duration":0}},{"uid":"56ea78de232338f4","reportUrl":"https://Panda2k30.github.io/Tests/39//#testresult/56ea78de232338f4","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\", element=\"f.270E7C7739F5D30F06F952492D26148C.d.5CF98A05103A9553294B97E052DBA6C5.e.61\")>.is_displayed","time":{"start":1732008768775,"stop":1732008773698,"duration":4923}},{"uid":"b2fae94eabc1dfc1","reportUrl":"https://Panda2k30.github.io/Tests/38//#testresult/b2fae94eabc1dfc1","status":"failed","statusDetails":"AssertionError: Expected success message 'Transfer inscribed successfully', but got ''\nassert 'Transfer inscribed successfully' in ''","time":{"start":1732006909637,"stop":1732006914467,"duration":4830}},{"uid":"c4ad9703e5d8e80a","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/c4ad9703e5d8e80a","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"6a6a0fbe719df93dabfbf4a7d1cdb679\", element=\"f.6F410CE2B1451522DFB76B012238F61E.d.5583CC522AF233919B3BAE12F49B59B1.e.60\")>.is_displayed","time":{"start":1732002730947,"stop":1732002736570,"duration":5623}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"aad397c89cc56986.json","parameterValues":[]}