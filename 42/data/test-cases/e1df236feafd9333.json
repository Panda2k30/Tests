{"uid":"e1df236feafd9333","name":"test_valid_change_image","fullName":"tests.mane_site_tests.test_nintondo_change_image#test_valid_change_image","historyId":"d273499acd9f9f539e363beb008d6f28","time":{"start":1732271268435,"stop":1732271291259,"duration":22824},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b591e0252be0e9eacae21d3364401bc\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Test valid change user profile image\")\n    \n    def test_valid_change_image(driver):\n    \n        random_id = random.choice(Data.ID)\n    \n        test_connect(driver)\n        time.sleep(0.5)\n    \n        menu = NintondoUserMenu(driver)\n        profile = Image(driver)\n    \n        menu.open_menu()\n        menu.menu_profile_btn()\n    \n        profile.image_btn()\n        old_url = profile.image_url()\n        profile.image_field(random_id)\n        profile.image_save_btn()\n    \n        driver.refresh\n    \n        profile.image_btn()\n>       new_url = profile.image_url()\n\nmane_site_tests/test_nintondo_change_image.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mane_site/nintondo_profile.py:54: in image_url\n    image_url = wait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1b591e0252be0e9eacae21d3364401bc\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fb872ccaf70>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732271255815,"stop":1732271255816,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732271267877,"stop":1732271268434,"duration":557},"status":"passed","steps":[],"attachments":[{"uid":"f0d292acd9596184","name":"Driver","source":"f0d292acd9596184.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b591e0252be0e9eacae21d3364401bc\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Test valid change user profile image\")\n    \n    def test_valid_change_image(driver):\n    \n        random_id = random.choice(Data.ID)\n    \n        test_connect(driver)\n        time.sleep(0.5)\n    \n        menu = NintondoUserMenu(driver)\n        profile = Image(driver)\n    \n        menu.open_menu()\n        menu.menu_profile_btn()\n    \n        profile.image_btn()\n        old_url = profile.image_url()\n        profile.image_field(random_id)\n        profile.image_save_btn()\n    \n        driver.refresh\n    \n        profile.image_btn()\n>       new_url = profile.image_url()\n\nmane_site_tests/test_nintondo_change_image.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/mane_site/nintondo_profile.py:54: in image_url\n    image_url = wait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1b591e0252be0e9eacae21d3364401bc\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fb872ccaf70>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"81bf5d011d7c34b8","name":"Current ID","source":"81bf5d011d7c34b8.txt","type":"text/plain","size":44},{"uid":"e72eba319258ddbf","name":"Password","source":"e72eba319258ddbf.txt","type":"text/plain","size":83},{"uid":"52c3013babd0c3d3","name":"Action","source":"52c3013babd0c3d3.txt","type":"text/plain","size":20},{"uid":"e47bcb6f6562d9a0","name":"Action","source":"e47bcb6f6562d9a0.txt","type":"text/plain","size":40},{"uid":"b5b107abba75296f","name":"Action","source":"b5b107abba75296f.txt","type":"text/plain","size":34},{"uid":"2deb207360063c","name":"Action","source":"2deb207360063c.txt","type":"text/plain","size":23},{"uid":"b1aefd2d904ae14e","name":"Action","source":"b1aefd2d904ae14e.txt","type":"text/plain","size":38},{"uid":"1ef393552eec6a0e","name":"Action","source":"1ef393552eec6a0e.txt","type":"text/plain","size":21},{"uid":"76320d1602b4926b","name":"Balance","source":"76320d1602b4926b.txt","type":"text/plain","size":34},{"uid":"243d89e1cbea171e","name":"Navigation","source":"243d89e1cbea171e.txt","type":"text/plain","size":46},{"uid":"e95fcac01552bbc8","name":"Action","source":"e95fcac01552bbc8.txt","type":"text/plain","size":32},{"uid":"e7239c2d0d27eb62","name":"Network Change Action","source":"e7239c2d0d27eb62.txt","type":"text/plain","size":19},{"uid":"fadcc1d34f62592f","name":"Connect Button Action","source":"fadcc1d34f62592f.txt","type":"text/plain","size":30},{"uid":"c2fddff8d33a88","name":"Page Title","source":"c2fddff8d33a88.txt","type":"text/plain","size":12},{"uid":"ad6163b97736fe56","name":"Window Switch Action","source":"ad6163b97736fe56.txt","type":"text/plain","size":52},{"uid":"7910afe31994daa7","name":"Sign Button Action","source":"7910afe31994daa7.txt","type":"text/plain","size":34},{"uid":"97185eaf405ac367","name":"Expand Menu Action","source":"97185eaf405ac367.txt","type":"text/plain","size":26},{"uid":"af070327b445eca2","name":"Profile Button Action","source":"af070327b445eca2.txt","type":"text/plain","size":19},{"uid":"153f2e474347f8ab","name":"Avatar Button Action","source":"153f2e474347f8ab.txt","type":"text/plain","size":22},{"uid":"6e126e7d0b8e943f","name":"Copy Image URL","source":"6e126e7d0b8e943f.txt","type":"text/plain","size":126},{"uid":"5a81a76fc40c4867","name":"Image Field Action","source":"5a81a76fc40c4867.txt","type":"text/plain","size":98},{"uid":"7a44656c9b327ab7","name":"Save Image Button Action","source":"7a44656c9b327ab7.txt","type":"text/plain","size":16},{"uid":"ad4c89c5b3fc7ea7","name":"Avatar Button Action","source":"ad4c89c5b3fc7ea7.txt","type":"text/plain","size":22}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":23,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732271291304,"stop":1732271291520,"duration":216},"status":"passed","steps":[],"attachments":[{"uid":"f51de575d5b1b711","name":"Screenshot","source":"f51de575d5b1b711.png","type":"image/png","size":186695}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Test valid change user profile image"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.mane_site_tests"},{"name":"suite","value":"test_nintondo_change_image"},{"name":"host","value":"5cb7560cca1f"},{"name":"thread","value":"9-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.mane_site_tests.test_nintondo_change_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"d624fc2271e8435e","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/41//#testresult/d624fc2271e8435e","status":"failed","statusDetails":"AssertionError: Avatar URL did not change! Old URL: https://testnet.nintondo.io/api/pub/preview/94b2cbe6730f357ea48ca250b8978043eb41f64de772416a37baca06690f2436i0, New URL: https://testnet.nintondo.io/api/pub/preview/94b2cbe6730f357ea48ca250b8978043eb41f64de772416a37baca06690f2436i0\nassert 'https://testnet.nintondo.io/api/pub/preview/94b2cbe6730f357ea48ca250b8978043eb41f64de772416a37baca06690f2436i0' != 'https://testnet.nintondo.io/api/pub/preview/94b2cbe6730f357ea48ca250b8978043eb41f64de772416a37baca06690f2436i0'","time":{"start":1732114274696,"stop":1732114282787,"duration":8091}},{"uid":"2a2c37272b158325","reportUrl":"https://Panda2k30.github.io/nintondo_autotests/40//#testresult/2a2c37272b158325","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x560b4814d31a <unknown>\n#1 0x560b47c636e0 <unknown>\n#2 0x560b47c9adc8 <unknown>\n#3 0x560b47c96926 <unknown>\n#4 0x560b47ce26f6 <unknown>\n#5 0x560b47ce1d46 <unknown>\n#6 0x560b47cd6203 <unknown>\n#7 0x560b47ca4cc0 <unknown>\n#8 0x560b47ca5c9e <unknown>\n#9 0x560b4811ad0b <unknown>\n#10 0x560b4811ec92 <unknown>\n#11 0x560b48107b3c <unknown>\n#12 0x560b4811f807 <unknown>\n#13 0x560b480ed0df <unknown>\n#14 0x560b4813c578 <unknown>\n#15 0x560b4813c740 <unknown>\n#16 0x560b4814c196 <unknown>\n#17 0x7fd54705f609 start_thread","time":{"start":1732114012189,"stop":1732114012189,"duration":0}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"e1df236feafd9333.json","parameterValues":[]}