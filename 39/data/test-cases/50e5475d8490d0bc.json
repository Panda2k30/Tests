{"uid":"50e5475d8490d0bc","name":"test_connect","fullName":"tests.mane_site_tests.test_nintondo_inscription_list#test_connect","historyId":"a7be5e6adb27b708980be23380a69b8a","time":{"start":1732008681548,"stop":1732008699706,"duration":18158},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56128bee74ca <unknown>\n#1 0x56128b9fa620 <unknown>\n#2 0x56128ba49306 <unknown>\n#3 0x56128ba495a1 <unknown>\n#4 0x56128ba8ea04 <unknown>\n#5 0x56128ba6d39d <unknown>\n#6 0x56128ba8bde0 <unknown>\n#7 0x56128ba6d113 <unknown>\n#8 0x56128ba3bbe0 <unknown>\n#9 0x56128ba3cbbe <unknown>\n#10 0x56128beb3e4b <unknown>\n#11 0x56128beb7de2 <unknown>\n#12 0x56128bea0d2c <unknown>\n#13 0x56128beb8957 <unknown>\n#14 0x56128be864bf <unknown>\n#15 0x56128bed6348 <unknown>\n#16 0x56128bed6510 <unknown>\n#17 0x56128bee6346 <unknown>\n#18 0x7fd82a093609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8191bf11397bd6664b73262cdf4de70b\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Test Connect wallet_tests\")\n    def test_connect(driver):\n    \n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        change_network = ManePage(driver)\n    \n        change_network.get_balance()\n        change_network.change_network(ex_id)\n    \n        connect = NintondoPage(driver)\n    \n        driver.get(\"https://nintondo.io/\")\n    \n        time.sleep(0.2)\n        connect.change_network_btn()\n    \n        driver.set_window_size(800, 768)\n    \n        time.sleep(0.2)\n        connect.connect_btn()\n    \n        WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))\n        windows = driver.window_handles\n        time.sleep(0.3)\n        driver.switch_to.window(windows[1])\n    \n        page_title = driver.title\n        allure.attach(page_title, name=\"Page Title\", attachment_type=allure.attachment_type.TEXT)\n    \n        allure.attach(f\"Switched to the new window. Page title: {page_title}\", name=\"Window Switch Action\", attachment_type=allure.attachment_type.TEXT)\n    \n        connect.sign_btn()\n        time.sleep(0.5)\n    \n        driver.switch_to.window(windows[0])\n        driver.set_window_size(1280, 720)\n    \n>       element = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//button[contains(@id, 'headlessui-popover-button')]\"))\n        )\n\nmane_site_tests/test_connect.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8191bf11397bd6664b73262cdf4de70b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f92a3e0da60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x56128bee74ca <unknown>\nE       #1 0x56128b9fa620 <unknown>\nE       #2 0x56128ba49306 <unknown>\nE       #3 0x56128ba495a1 <unknown>\nE       #4 0x56128ba8ea04 <unknown>\nE       #5 0x56128ba6d39d <unknown>\nE       #6 0x56128ba8bde0 <unknown>\nE       #7 0x56128ba6d113 <unknown>\nE       #8 0x56128ba3bbe0 <unknown>\nE       #9 0x56128ba3cbbe <unknown>\nE       #10 0x56128beb3e4b <unknown>\nE       #11 0x56128beb7de2 <unknown>\nE       #12 0x56128bea0d2c <unknown>\nE       #13 0x56128beb8957 <unknown>\nE       #14 0x56128be864bf <unknown>\nE       #15 0x56128bed6348 <unknown>\nE       #16 0x56128bed6510 <unknown>\nE       #17 0x56128bee6346 <unknown>\nE       #18 0x7fd82a093609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732008675364,"stop":1732008675365,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732008680993,"stop":1732008681546,"duration":553},"status":"passed","steps":[],"attachments":[{"uid":"f9f27f213571349c","name":"Driver","source":"f9f27f213571349c.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56128bee74ca <unknown>\n#1 0x56128b9fa620 <unknown>\n#2 0x56128ba49306 <unknown>\n#3 0x56128ba495a1 <unknown>\n#4 0x56128ba8ea04 <unknown>\n#5 0x56128ba6d39d <unknown>\n#6 0x56128ba8bde0 <unknown>\n#7 0x56128ba6d113 <unknown>\n#8 0x56128ba3bbe0 <unknown>\n#9 0x56128ba3cbbe <unknown>\n#10 0x56128beb3e4b <unknown>\n#11 0x56128beb7de2 <unknown>\n#12 0x56128bea0d2c <unknown>\n#13 0x56128beb8957 <unknown>\n#14 0x56128be864bf <unknown>\n#15 0x56128bed6348 <unknown>\n#16 0x56128bed6510 <unknown>\n#17 0x56128bee6346 <unknown>\n#18 0x7fd82a093609 start_thread","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8191bf11397bd6664b73262cdf4de70b\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Test Connect wallet_tests\")\n    def test_connect(driver):\n    \n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        change_network = ManePage(driver)\n    \n        change_network.get_balance()\n        change_network.change_network(ex_id)\n    \n        connect = NintondoPage(driver)\n    \n        driver.get(\"https://nintondo.io/\")\n    \n        time.sleep(0.2)\n        connect.change_network_btn()\n    \n        driver.set_window_size(800, 768)\n    \n        time.sleep(0.2)\n        connect.connect_btn()\n    \n        WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))\n        windows = driver.window_handles\n        time.sleep(0.3)\n        driver.switch_to.window(windows[1])\n    \n        page_title = driver.title\n        allure.attach(page_title, name=\"Page Title\", attachment_type=allure.attachment_type.TEXT)\n    \n        allure.attach(f\"Switched to the new window. Page title: {page_title}\", name=\"Window Switch Action\", attachment_type=allure.attachment_type.TEXT)\n    \n        connect.sign_btn()\n        time.sleep(0.5)\n    \n        driver.switch_to.window(windows[0])\n        driver.set_window_size(1280, 720)\n    \n>       element = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.XPATH, \"//button[contains(@id, 'headlessui-popover-button')]\"))\n        )\n\nmane_site_tests/test_connect.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8191bf11397bd6664b73262cdf4de70b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f92a3e0da60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x56128bee74ca <unknown>\nE       #1 0x56128b9fa620 <unknown>\nE       #2 0x56128ba49306 <unknown>\nE       #3 0x56128ba495a1 <unknown>\nE       #4 0x56128ba8ea04 <unknown>\nE       #5 0x56128ba6d39d <unknown>\nE       #6 0x56128ba8bde0 <unknown>\nE       #7 0x56128ba6d113 <unknown>\nE       #8 0x56128ba3bbe0 <unknown>\nE       #9 0x56128ba3cbbe <unknown>\nE       #10 0x56128beb3e4b <unknown>\nE       #11 0x56128beb7de2 <unknown>\nE       #12 0x56128bea0d2c <unknown>\nE       #13 0x56128beb8957 <unknown>\nE       #14 0x56128be864bf <unknown>\nE       #15 0x56128bed6348 <unknown>\nE       #16 0x56128bed6510 <unknown>\nE       #17 0x56128bee6346 <unknown>\nE       #18 0x7fd82a093609 start_thread\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"4a4b46d6fa31a2ee","name":"Current ID","source":"4a4b46d6fa31a2ee.txt","type":"text/plain","size":44},{"uid":"eb31dc65112d3118","name":"Password","source":"eb31dc65112d3118.txt","type":"text/plain","size":72},{"uid":"b647de5049a02bc1","name":"Action","source":"b647de5049a02bc1.txt","type":"text/plain","size":20},{"uid":"cba88c72b1e0839e","name":"Action","source":"cba88c72b1e0839e.txt","type":"text/plain","size":40},{"uid":"c8c6c8849d0307b5","name":"Action","source":"c8c6c8849d0307b5.txt","type":"text/plain","size":34},{"uid":"14f2c98a0d234d87","name":"Action","source":"14f2c98a0d234d87.txt","type":"text/plain","size":23},{"uid":"edd0f3a1fb1f7b95","name":"Action","source":"edd0f3a1fb1f7b95.txt","type":"text/plain","size":38},{"uid":"f58de4691e825ca2","name":"Action","source":"f58de4691e825ca2.txt","type":"text/plain","size":21},{"uid":"46b0a072634744fe","name":"Balance","source":"46b0a072634744fe.txt","type":"text/plain","size":34},{"uid":"e4e15acaf7168e91","name":"Navigation","source":"e4e15acaf7168e91.txt","type":"text/plain","size":46},{"uid":"40ffa3d183936b6","name":"Action","source":"40ffa3d183936b6.txt","type":"text/plain","size":32},{"uid":"e3f071cf548c6b7f","name":"Network Change Action","source":"e3f071cf548c6b7f.txt","type":"text/plain","size":19},{"uid":"bfc6557e5adfaa55","name":"Connect Button Action","source":"bfc6557e5adfaa55.txt","type":"text/plain","size":30},{"uid":"22d5225f88425071","name":"Page Title","source":"22d5225f88425071.txt","type":"text/plain","size":14},{"uid":"7da8e8380fc5bc47","name":"Window Switch Action","source":"7da8e8380fc5bc47.txt","type":"text/plain","size":54},{"uid":"47c69886dc0c8f16","name":"Sign Button Action","source":"47c69886dc0c8f16.txt","type":"text/plain","size":34}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":16,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732008699771,"stop":1732008700080,"duration":309},"status":"passed","steps":[],"attachments":[{"uid":"3a7dd9be0639f522","name":"Screenshot","source":"3a7dd9be0639f522.png","type":"image/png","size":99300}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Test Connect wallet_tests"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.mane_site_tests"},{"name":"suite","value":"test_nintondo_inscription_list"},{"name":"host","value":"d49ee84af589"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.mane_site_tests.test_nintondo_inscription_list"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"2a036f9ba530a787","reportUrl":"https://Panda2k30.github.io/Tests/38//#testresult/2a036f9ba530a787","status":"passed","time":{"start":1732006838037,"stop":1732006842838,"duration":4801}},{"uid":"2e6eb27a5a03fbeb","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/2e6eb27a5a03fbeb","status":"passed","time":{"start":1732002640336,"stop":1732002646794,"duration":6458}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"50e5475d8490d0bc.json","parameterValues":[]}