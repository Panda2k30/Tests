{"uid":"5f5cd195f5053303","name":"test_valid_sending_transfers","fullName":"tests.wallet_tests.test_wallet_send_transfer#test_valid_sending_transfers","historyId":"898d03df45f80a262ac0dcc9bda2eeff","time":{"start":1732008878426,"stop":1732008883337,"duration":4911},"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3d9df1ae495f76476a218957722910fc\", element=\"f.DEC40D804AC69ED80874FB9F47E3C613.d.A87E1784B45E89DC5804AD049DE0F272.e.65\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d9df1ae495f76476a218957722910fc\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid sending transfers from the wallet\")\n    def test_valid_sending_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.send_btn()\n        bel_page.address_input(Data.VALID_ADDRESS_FOR_CHECK)\n        bel_page.select_amount()\n        bel_page.send_btn()\n    \n        # Check for success message\n        time.sleep(0.5)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3d9df1ae495f76476a218957722910fc\", element=\"f.DEC40D804AC69ED80874FB9F47E3C613.d.A87E1784B45E89DC5804AD049DE0F272.e.65\")>.is_displayed\n\nwallet_tests/test_wallet_send_transfer.py:45: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732008675364,"stop":1732008675365,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732008877850,"stop":1732008878425,"duration":575},"status":"passed","steps":[],"attachments":[{"uid":"d09e2de687886276","name":"Driver","source":"d09e2de687886276.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3d9df1ae495f76476a218957722910fc\", element=\"f.DEC40D804AC69ED80874FB9F47E3C613.d.A87E1784B45E89DC5804AD049DE0F272.e.65\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d9df1ae495f76476a218957722910fc\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid sending transfers from the wallet\")\n    def test_valid_sending_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.send_btn()\n        bel_page.address_input(Data.VALID_ADDRESS_FOR_CHECK)\n        bel_page.select_amount()\n        bel_page.send_btn()\n    \n        # Check for success message\n        time.sleep(0.5)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3d9df1ae495f76476a218957722910fc\", element=\"f.DEC40D804AC69ED80874FB9F47E3C613.d.A87E1784B45E89DC5804AD049DE0F272.e.65\")>.is_displayed\n\nwallet_tests/test_wallet_send_transfer.py:45: AssertionError","steps":[],"attachments":[{"uid":"e9f0b9cd564cf7ac","name":"Current ID","source":"e9f0b9cd564cf7ac.txt","type":"text/plain","size":44},{"uid":"395be04349ecf62a","name":"Password","source":"395be04349ecf62a.txt","type":"text/plain","size":45},{"uid":"10e9f4fcaa2feeb1","name":"Action","source":"10e9f4fcaa2feeb1.txt","type":"text/plain","size":20},{"uid":"d7ef053d7318d70c","name":"Action","source":"d7ef053d7318d70c.txt","type":"text/plain","size":40},{"uid":"7ae72269d9113578","name":"Action","source":"7ae72269d9113578.txt","type":"text/plain","size":34},{"uid":"c85233ff79319cb5","name":"Action","source":"c85233ff79319cb5.txt","type":"text/plain","size":23},{"uid":"db961eb75e69ac6a","name":"Action","source":"db961eb75e69ac6a.txt","type":"text/plain","size":38},{"uid":"8daed0230d6269b","name":"Action","source":"8daed0230d6269b.txt","type":"text/plain","size":21},{"uid":"915bf5ae3bad5a9d","name":"Action","source":"915bf5ae3bad5a9d.txt","type":"text/plain","size":46},{"uid":"3966bd95707ed3d5","name":"Action","source":"3966bd95707ed3d5.txt","type":"text/plain","size":32},{"uid":"20ca011df56948d5","name":"Action","source":"20ca011df56948d5.txt","type":"text/plain","size":17},{"uid":"b84865a728c6f03","name":"Action","source":"b84865a728c6f03.txt","type":"text/plain","size":16},{"uid":"f46d92b05cafee7","name":"Balance","source":"f46d92b05cafee7.txt","type":"text/plain","size":16},{"uid":"b12ada2232f62b65","name":"Action","source":"b12ada2232f62b65.txt","type":"text/plain","size":12},{"uid":"a8d6988757f5bf1f","name":"Action","source":"a8d6988757f5bf1f.txt","type":"text/plain","size":15},{"uid":"521332890925a5aa","name":"Action","source":"521332890925a5aa.txt","type":"text/plain","size":21},{"uid":"f8613bd6094db374","name":"Action","source":"f8613bd6094db374.txt","type":"text/plain","size":15},{"uid":"62cdd2f2bc5d6d41","name":"Address Input","source":"62cdd2f2bc5d6d41.txt","type":"text/plain","size":63},{"uid":"dabf15cf5db7f0f5","name":"Action","source":"dabf15cf5db7f0f5.txt","type":"text/plain","size":26},{"uid":"acdc4c13f8cd155a","name":"Action","source":"acdc4c13f8cd155a.txt","type":"text/plain","size":15}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":20,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732008883340,"stop":1732008883504,"duration":164},"status":"passed","steps":[],"attachments":[{"uid":"6a274eb7ecfe9e81","name":"Screenshot","source":"6a274eb7ecfe9e81.png","type":"image/png","size":51587}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Valid sending transfers from the wallet"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_send_transfer"},{"name":"host","value":"d49ee84af589"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_send_transfer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"c5cb002bb15be412","reportUrl":"https://Panda2k30.github.io/Tests/38//#testresult/c5cb002bb15be412","status":"passed","time":{"start":1732007007119,"stop":1732007012622,"duration":5503}},{"uid":"8f9882efcf5df3ed","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/8f9882efcf5df3ed","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"35dc316ce47d852b3b2792a44b89205c\", element=\"f.17ED124E95B62089E5F0EF9BF72D7FD9.d.1745489FBF7E409F5EE7181917F92DD2.e.57\")>.is_displayed","time":{"start":1732002832652,"stop":1732002838158,"duration":5506}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"5f5cd195f5053303.json","parameterValues":[]}