{"uid":"56ea78de232338f4","name":"test_valid_minting_transfers","fullName":"tests.wallet_tests.test_wallet_mint_transfer#test_valid_minting_transfers","historyId":"afefd7bd02e1625af6b363aa55ab95cd","time":{"start":1732008768775,"stop":1732008773698,"duration":4923},"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\", element=\"f.270E7C7739F5D30F06F952492D26148C.d.5CF98A05103A9553294B97E052DBA6C5.e.61\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.35)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\", element=\"f.270E7C7739F5D30F06F952492D26148C.d.5CF98A05103A9553294B97E052DBA6C5.e.61\")>.is_displayed\n\nwallet_tests/test_wallet_mint_transfer.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732008675364,"stop":1732008675365,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732008768221,"stop":1732008768774,"duration":553},"status":"passed","steps":[],"attachments":[{"uid":"d4e207f822ab532f","name":"Driver","source":"d4e207f822ab532f.txt","type":"text/plain","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\", element=\"f.270E7C7739F5D30F06F952492D26148C.d.5CF98A05103A9553294B97E052DBA6C5.e.61\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.35)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"3e61de82d281f1adbe3e0c6a5e53cba7\", element=\"f.270E7C7739F5D30F06F952492D26148C.d.5CF98A05103A9553294B97E052DBA6C5.e.61\")>.is_displayed\n\nwallet_tests/test_wallet_mint_transfer.py:43: AssertionError","steps":[],"attachments":[{"uid":"786e10c3a142d2e7","name":"Current ID","source":"786e10c3a142d2e7.txt","type":"text/plain","size":44},{"uid":"8a7058388ada1ad9","name":"Password","source":"8a7058388ada1ad9.txt","type":"text/plain","size":79},{"uid":"756559723bf86556","name":"Action","source":"756559723bf86556.txt","type":"text/plain","size":20},{"uid":"bf3d2245c4393728","name":"Action","source":"bf3d2245c4393728.txt","type":"text/plain","size":40},{"uid":"bbc9ea5e393a534","name":"Action","source":"bbc9ea5e393a534.txt","type":"text/plain","size":34},{"uid":"25f62c9b70bafdcc","name":"Action","source":"25f62c9b70bafdcc.txt","type":"text/plain","size":23},{"uid":"85ff07dd48e19cdb","name":"Action","source":"85ff07dd48e19cdb.txt","type":"text/plain","size":38},{"uid":"846695ae7f175fc3","name":"Action","source":"846695ae7f175fc3.txt","type":"text/plain","size":21},{"uid":"6930c9edd5aa1e9d","name":"Action","source":"6930c9edd5aa1e9d.txt","type":"text/plain","size":46},{"uid":"34113fe115cceb00","name":"Action","source":"34113fe115cceb00.txt","type":"text/plain","size":32},{"uid":"357f47e5c648c231","name":"Action","source":"357f47e5c648c231.txt","type":"text/plain","size":17},{"uid":"ca0f85d436037617","name":"Action","source":"ca0f85d436037617.txt","type":"text/plain","size":16},{"uid":"1b22c088c27581cd","name":"Transfer Balance","source":"1b22c088c27581cd.txt","type":"text/plain","size":27},{"uid":"64e4fea005efafef","name":"Action","source":"64e4fea005efafef.txt","type":"text/plain","size":12},{"uid":"b79aa02365788288","name":"Action","source":"b79aa02365788288.txt","type":"text/plain","size":15},{"uid":"160829c9deba843","name":"Action","source":"160829c9deba843.txt","type":"text/plain","size":21},{"uid":"c2b993d9c158cfec","name":"Action","source":"c2b993d9c158cfec.txt","type":"text/plain","size":24},{"uid":"22058ee90f494cf4","name":"Amount","source":"22058ee90f494cf4.txt","type":"text/plain","size":19},{"uid":"6a34c146de1c6c97","name":"Action","source":"6a34c146de1c6c97.txt","type":"text/plain","size":19}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":19,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732008773702,"stop":1732008773861,"duration":159},"status":"passed","steps":[],"attachments":[{"uid":"eb5c35c27f8259f1","name":"Screenshot","source":"eb5c35c27f8259f1.png","type":"image/png","size":49508}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Valid minting transfers from the wallet"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_mint_transfer"},{"name":"host","value":"d49ee84af589"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_mint_transfer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"b2fae94eabc1dfc1","reportUrl":"https://Panda2k30.github.io/Tests/38//#testresult/b2fae94eabc1dfc1","status":"failed","statusDetails":"AssertionError: Expected success message 'Transfer inscribed successfully', but got ''\nassert 'Transfer inscribed successfully' in ''","time":{"start":1732006909637,"stop":1732006914467,"duration":4830}},{"uid":"c4ad9703e5d8e80a","reportUrl":"https://Panda2k30.github.io/Tests/37//#testresult/c4ad9703e5d8e80a","status":"failed","statusDetails":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"6a6a0fbe719df93dabfbf4a7d1cdb679\", element=\"f.6F410CE2B1451522DFB76B012238F61E.d.5583CC522AF233919B3BAE12F49B59B1.e.60\")>.is_displayed","time":{"start":1732002730947,"stop":1732002736570,"duration":5623}}]},"tags":["@pytest.mark.usefixtures('driver')"]},"source":"56ea78de232338f4.json","parameterValues":[]}