{"uid":"c4ad9703e5d8e80a","name":"test_valid_minting_transfers","fullName":"tests.wallet_tests.test_wallet_mint_transfer#test_valid_minting_transfers","historyId":"afefd7bd02e1625af6b363aa55ab95cd","time":{"start":1732002730947,"stop":1732002736570,"duration":5623},"status":"failed","statusMessage":"AssertionError: Expected a success message, but it was not displayed.\nassert False\n +  where False = is_displayed()\n +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"6a6a0fbe719df93dabfbf4a7d1cdb679\", element=\"f.6F410CE2B1451522DFB76B012238F61E.d.5583CC522AF233919B3BAE12F49B59B1.e.60\")>.is_displayed","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6a6a0fbe719df93dabfbf4a7d1cdb679\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    @allure.feature(\"Valid minting transfers from the wallet\")\n    def test_valid_minting_transfers(driver):\n    \n        mane_page = ManePage(driver)\n        settings = WalletSettings(driver)\n        bel_page = TransfersPage(driver)\n    \n        # Private key authentication\n        ex_id, password = restore_by_private_key_proc(driver)\n    \n        settings.change_network(ex_id) # change network to Testnet\n    \n        mane_page.settings_page_btn()\n    \n        settings.change_type_legacy()\n    \n        first_check = bel_page.check_transfer_balance()\n    \n        mane_page.nft_page_btn()\n    \n        bel_page.bel_btn()\n        bel_page.select_transfer()\n        bel_page.mint_btn()\n        bel_page.amount(2)\n        bel_page.inscribe_btn()\n    \n        # Check for success message\n        time.sleep(0.5)\n    \n        # Locate success message\n        success_message = driver.find_element(By.XPATH, \"//div[contains(@class, 'toast ')]\")\n>       assert success_message.is_displayed(), \"Expected a success message, but it was not displayed.\"\nE       AssertionError: Expected a success message, but it was not displayed.\nE       assert False\nE        +  where False = is_displayed()\nE        +    where is_displayed = <selenium.webdriver.remote.webelement.WebElement (session=\"6a6a0fbe719df93dabfbf4a7d1cdb679\", element=\"f.6F410CE2B1451522DFB76B012238F61E.d.5583CC522AF233919B3BAE12F49B59B1.e.60\")>.is_displayed\n\nwallet_tests/test_wallet_mint_transfer.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732002630958,"stop":1732002630959,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732002730389,"stop":1732002730946,"duration":557},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"driver::0","time":{"start":1732002736614,"stop":1732002736764,"duration":150},"status":"passed","steps":[],"attachments":[{"uid":"5deace589bdfadf5","name":"Screenshot","source":"5deace589bdfadf5.png","type":"image/png","size":49231}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Valid minting transfers from the wallet"},{"name":"tag","value":"@pytest.mark.usefixtures('driver')"},{"name":"parentSuite","value":"tests.wallet_tests"},{"name":"suite","value":"test_wallet_mint_transfer"},{"name":"host","value":"b84ba1d26cb8"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.wallet_tests.test_wallet_mint_transfer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('driver')"]},"source":"c4ad9703e5d8e80a.json","parameterValues":[]}